{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\anuwadhw\\\\React\\\\react-nextjs-meetups\\\\pages\\\\index.js\",\n    _this = this;\n\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport Head from \"next/head\";\nimport React from \"react\"; // const DUMMY_MEETUPS = [\n//   {\n//     id: \"m1\",\n//     title: \"A first meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 12345, Some City\",\n//     description: \"This is a first meetup\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"A second meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 43434, Some City\",\n//     description: \"This is a second meetup\",\n//   },\n//   {\n//     id: \"m3\",\n//     title: \"A third meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n//     address: \"Some address 10323, Some City\",\n//     description: \"This is a third meetup\",\n//   },\n// ];\n\nvar HomePage = function HomePage(props) {\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, _this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, _this);\n}; // this function for every incoming request\n// guaranteed to run every request\n// when req and res are required\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // fetch data from an API or database\n//   return {\n//     props: { meetups: DUMMY_MEETUPS },\n//   };\n// }\n// this is function will executed away from client side , executed while server side\n// code will be pre rendered\n// generate static pages\n// used when data is not getting change frequently\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/anuwadhw/React/react-nextjs-meetups/pages/index.js"],"names":["MeetupList","Head","React","HomePage","props","meetups"],"mappings":";;;;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1B;;AACA;AAAA,UAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;KA3BMF,Q;;AAwDN,eAAeA,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport Head from \"next/head\";\r\nimport React from \"react\";\r\n\r\n// const DUMMY_MEETUPS = [\r\n//   {\r\n//     id: \"m1\",\r\n//     title: \"A first meetup\",\r\n//     image:\r\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n//     address: \"Some address 12345, Some City\",\r\n//     description: \"This is a first meetup\",\r\n//   },\r\n//   {\r\n//     id: \"m2\",\r\n//     title: \"A second meetup\",\r\n//     image:\r\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n//     address: \"Some address 43434, Some City\",\r\n//     description: \"This is a second meetup\",\r\n//   },\r\n//   {\r\n//     id: \"m3\",\r\n//     title: \"A third meetup\",\r\n//     image:\r\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n//     address: \"Some address 10323, Some City\",\r\n//     description: \"This is a third meetup\",\r\n//   },\r\n// ];\r\n\r\nconst HomePage = (props) => {\r\n  return;\r\n  <React.Fragment>\r\n    <Head>\r\n      <title>React Meetups</title>\r\n    </Head>\r\n    <MeetupList meetups={props.meetups}></MeetupList>;\r\n  </React.Fragment>;\r\n};\r\n\r\n// this function for every incoming request\r\n// guaranteed to run every request\r\n// when req and res are required\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   // fetch data from an API or database\r\n\r\n//   return {\r\n//     props: { meetups: DUMMY_MEETUPS },\r\n//   };\r\n// }\r\n\r\n// this is function will executed away from client side , executed while server side\r\n// code will be pre rendered\r\n// generate static pages\r\n// used when data is not getting change frequently\r\nexport async function getStaticProps() {\r\n  // fetch data from an API or database\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://Anurag2:MonQGOeDe1gHOVBN@cluster0.7vuti.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        image: meetup.image,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 10, // revalidate the data after every 10 seconds\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}